# Generated by Django 2.1.2 on 2018-10-25 11:34

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('admin_id', models.CharField(max_length=100)),
                ('dob', models.DateField(default=datetime.datetime.now)),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('mobilenum', models.CharField(max_length=12)),
                ('password', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='assignments',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('studentdegree', models.CharField(max_length=100)),
                ('post_time', models.DateTimeField(default=datetime.datetime.now)),
                ('deadline', models.DateTimeField(default=datetime.datetime.now)),
                ('description', models.CharField(max_length=4000)),
            ],
        ),
        migrations.CreateModel(
            name='classreschedules',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('post_time', models.DateTimeField(default=datetime.datetime.now)),
                ('old_time', models.TimeField(auto_now_add=True)),
                ('new_time', models.TimeField(auto_now_add=True)),
                ('old_date', models.DateField(default=datetime.datetime.now)),
                ('new_date', models.DateField(default=datetime.datetime.now)),
                ('old_room', models.IntegerField(default=101)),
                ('new_room', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=4000)),
            ],
        ),
        migrations.CreateModel(
            name='course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=100)),
                ('credits', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='day_parts',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('slot_no', models.CharField(max_length=100)),
                ('start_time', models.CharField(max_length=100)),
                ('end_time', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='department',
            fields=[
                ('dept_id', models.AutoField(primary_key=True, serialize=False)),
                ('dept_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='events',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('studentdegree', models.CharField(max_length=100)),
                ('event_datetime', models.CharField(max_length=100)),
                ('post_time', models.DateTimeField(default=datetime.datetime.now)),
                ('event_name', models.CharField(max_length=100)),
                ('event_type', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=4000)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.course')),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.department')),
            ],
        ),
        migrations.CreateModel(
            name='faculty',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('faculty_id', models.CharField(max_length=100)),
                ('dob', models.DateField(default=datetime.datetime.now)),
                ('email', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('mobilenum', models.CharField(max_length=12)),
                ('deptid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.department')),
            ],
        ),
        migrations.CreateModel(
            name='favourites',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('event_datetime', models.CharField(max_length=100)),
                ('post_time', models.DateTimeField(default=datetime.datetime.now)),
                ('event_name', models.CharField(max_length=100)),
                ('event_type', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=4000)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.events')),
            ],
        ),
        migrations.CreateModel(
            name='grades',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=20)),
                ('weightage', models.IntegerField(default=0)),
                ('marks', models.IntegerField(default=0)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.course')),
            ],
        ),
        migrations.CreateModel(
            name='preclassreq',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('post_time', models.DateTimeField(default=datetime.datetime.now)),
                ('need_day', models.DateField(default=datetime.datetime.now)),
                ('content', models.CharField(max_length=4000)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.course')),
                ('faculty_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='s_c_mapper',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.course')),
            ],
        ),
        migrations.CreateModel(
            name='student',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('student_id', models.CharField(max_length=15)),
                ('dob', models.DateField(default=datetime.datetime.now)),
                ('yoj', models.DateField(default=datetime.datetime.now)),
                ('batch', models.IntegerField(default=1)),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('mobilenum', models.CharField(max_length=12)),
                ('studentdegree', models.CharField(max_length=100)),
                ('deptid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.department')),
            ],
        ),
        migrations.CreateModel(
            name='timetable',
            fields=[
                ('slno', models.AutoField(primary_key=True, serialize=False)),
                ('studentdegree', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('room_no', models.IntegerField(default=101)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.course')),
                ('slot_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.day_parts')),
            ],
        ),
        migrations.AddField(
            model_name='s_c_mapper',
            name='sid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.student'),
        ),
        migrations.AddField(
            model_name='grades',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.student'),
        ),
        migrations.AddField(
            model_name='favourites',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.student'),
        ),
        migrations.AddField(
            model_name='course',
            name='faculty_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.faculty'),
        ),
        migrations.AddField(
            model_name='classreschedules',
            name='course_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.course'),
        ),
        migrations.AddField(
            model_name='assignments',
            name='course_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cop.course'),
        ),
    ]
